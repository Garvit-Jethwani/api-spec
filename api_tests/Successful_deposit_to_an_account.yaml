# Test generated by RoostGPT for test qlue-single-feature-integration using AI Type Open AI and AI Model gpt-4


config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "Successful_deposit_to_an_account.csv"
    fields:
      - "customerId"
      - "sourceAccountId"
      - "amount"
      - "currency"
  plugins:
    expect: {}

scenarios:
  - name: "Successful deposit to an account"
    flow:
      # Given the client is authenticated and authorized to make a deposit
      - post:
          url: "/deposit"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
            amount: "{{ amount }}"
            currency: "{{ currency }}"
            image:
              frontImage: "{{ frontImage }}"
              backImage: "{{ backImage }}"
          expect:
            - statusCode: 200
            - hasProperty: "transactionId"
          capture:
            json: "$.transactionId"
            as: "transactionId"
          think: 1

      # Then the system should process the deposit successfully
      - post:
          url: "/GetAccountInfo"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            X-Auth-token: "{{ XAuthToken }}"
            X-CORRELATION-ID: "{{ XCorrelationId }}"
          json:
            customerId: "{{ customerId }}"
            sourceAccountId: "{{ sourceAccountId }}"
          expect:
            - statusCode: 200
            - hasProperty: "accounts.0.availableBalance"
          think: 1

      # And the system should return a deposit confirmation with a unique transaction ID
      - post:
          url: "/GetTransactions"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            koreUserId: "{{ koreUserId }}"
            botId: "{{ botId }}"
            accountId: "{{ accountId }}"
            X-Auth-token: "{{ XAuthToken }}"
            X-CORRELATION-ID: "{{ XCorrelationId }}"
          json:
            customerId: "{{ customerId }}"
            accountNumber: ["{{ sourceAccountId }}"]
            numOfTransactions: 1
            status: "completed"
            startDate: "{{ startDate }}"
            endDate: "{{ endDate }}"
            sort:
              type: "date"
              value: "desc"
            transactionAmount:
              amount1: "{{ amount }}"
              currency: "{{ currency }}"
            category: 
              - codeType: "deposit"
                value: ["deposit"]
                source: "system"
            debitOrCredit: "credit"
          expect:
            - statusCode: 200
            - hasProperty: "items[0].transactionId"
            - equals:
                - "{{ items[0].transactionId }}"
                - "{{ transactionId }}"
          think: 1
