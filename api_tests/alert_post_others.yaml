# Test generated by RoostGPT for test credential-artillery-test using AI Type Vertex AI and AI Model code-bison-32k


# RoostTestHash=c211c7fbe6

# Corrected Artillery Test Case

config:
  target: {{ $processEnvironment.API_HOST }}
  expect: true

scenario:
  # Attempting to send an alert with an invalid 'sn' field.
  - log: "Attempting to send an alert with an invalid 'sn' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "invalid_sn"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an empty 'cameraId' field.
  - log: "Sending an alert with an empty 'cameraId' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: ""
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'timestamp' field.
  - log: "Sending an alert with an invalid 'timestamp' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "invalid_timestamp"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'confidence' field.
  - log: "Sending an alert with an invalid 'confidence' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: "invalid_confidence"
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'alert' field.
  - log: "Sending an alert with an invalid 'alert' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "invalid_alert"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'subAlert' field.
  - log: "Sending an alert with an invalid 'subAlert' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "invalid_subAlert"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'photoUrl' field.
  - log: "Sending an alert with an invalid 'photoUrl' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "invalid_photoUrl"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert with an invalid 'videoUrl' field.
  - log: "Sending an alert with an invalid 'videoUrl' field."
    request:
      method: POST
      url: /api/device/camera/feature/alert
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "invalid_videoUrl"
      expect:
        statusCode: 400
        contentType: application/json
        hasProperty: message
        hasProperty: code
  - think: 500

  # Sending an alert to an invalid URL.
  - log: "Sending an alert to an invalid URL."
    request:
      method: POST
      url: /invalid/url
      payload:
        sn: "0904H210008"
        cameraId: "c79794c4-829d-11ee-b962-0242ac120002"
        timestamp: "2023-11-29T09:12:33.001Z"
        confidence: 0.67
        alert: "intrusion"
        subAlert: "person"
        photoUrl: "video"
        videoUrl: "https://ipfront.com"
      expect:
        statusCode: notStatusCode: 200
