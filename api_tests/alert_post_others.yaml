# Test generated by RoostGPT for test qlue-artillery using AI Type Azure Open AI and AI Model roost-gpt4-32k


# RoostTestHash=c211c7fbe6

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "alert_post_others.csv"
    fields:
      ["sn", "cameraId", "timestamp", "confidence", "alert", "subAlert", "photoUrl", "videoUrl"]
    skipHeader: true
  http:
    headers:
      Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
      
scenarios:
  - name: "Failure case scenario for /api/device/camera/feature/alert endpoint"
    flow:
        - post:
            url: "/api/device/camera/feature/alert"
            headers:
              x-invalid-header: "invalid_value"
            json:
              sn: "{{ sn }}"
              cameraId: "{{ cameraId }}"
              timestamp: "{{ timestamp }}"
              confidence: "{{ confidence }}"
              alert: "{{ alert }}"
              subAlert: "{{ subAlert }}"
              photoUrl: "{{ photoUrl }}"
              videoUrl: "{{ videoUrl }}"
            expect:
              - statusCode: 400 # As per the provided API spec, 400 Bad Request may occur due to invalid headers
              - hasProperty: 'message'
            capture:
              - json: "$.message"
                as: "error_message"
            log: "Posting alert with invalid header: Expect 400 Bad Request error"
        - think: 5

        - post:
            url: "/api/device/camera/feature/invalid_alert" # Invalid URL
            headers:
              Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            json:
              sn: "{{ sn }}"
              cameraId: "{{ cameraId }}"
              timestamp: "{{ timestamp }}"
              confidence: "{{ confidence }}"
              alert: "{{ alert }}"
              subAlert: "{{ subAlert }}"
              photoUrl: "{{ photoUrl }}"
              videoUrl: "{{ videoUrl }}"
            expect:
              - statusCode: 404 # As per the HTTP standard, a 404 Not Found status code may occur due to invalid URLs
            log: "Posting alert on an invalid URL: Expect 404 Not Found error"
        - think: 5

        - post:
            url: "/api/device/camera/feature/alert"
            headers:
              Authorization: "invalid_token" # Invalid auth token
            json:
              sn: "{{ sn }}"
              cameraId: "{{ cameraId }}"
              timestamp: "{{ timestamp }}"
              confidence: "{{ confidence }}"
              alert: "{{ alert }}"
              subAlert: "{{ subAlert }}"
              photoUrl: "{{ photoUrl }}"
              videoUrl: "{{ videoUrl }}"
            expect:
              - statusCode: 401 # As per the HTTP standard, a 401 Unauthorized status code may occur due to invalid authorization
            log: "Posting alert with invalid auth token: Expect 401 Unauthorized error"
