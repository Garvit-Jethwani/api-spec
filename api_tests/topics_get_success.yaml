# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# Test generated for /kafka/v3/clusters/{cluster_id}/topics_get for http method type GET in artillery framework

# RoostTestHash=5a89adf6e3


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "topics_get_success.csv"
    fields:
      - "cluster_id"
    skipHeader: true
  environments:
    development:
      target: "https://dev.api.example.com"
    staging:
      target: "https://staging.api.example.com"
    production:
      target: "https://api.example.com"

scenarios:
  - name: "Validate correct API behavior with valid input payloads"
    flow:
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: 'kind'
            - hasProperty: 'metadata'
            - hasProperty: 'data'
          log: "Fetching list of Kafka topics for cluster {{ cluster_id }}"
          afterResponse: "logResponse"
      - think: 1

      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/someTopicName/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: 'kind'
            - hasProperty: 'metadata'
            - hasProperty: 'data'
          log: "Fetching partition details for a specific topic within the cluster {{ cluster_id }}"
          afterResponse: "logResponse"
      - think: 1

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            topic_name: "newTopic"
            partitions_count: 3
            replication_factor: 2
          expect:
            - statusCode: 201
            - hasProperty: 'kind'
            - hasProperty: 'metadata'
            - hasProperty: 'cluster_id'
          log: "Creating a new topic in the cluster {{ cluster_id }}"
          afterResponse: "logResponse"
      - think: 1

      - patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/existingTopicName/configs"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
            Content-Type: "application/json"
          json:
            retention.ms: "86400000"
          expect:
            - statusCode: 204
          log: "Updating configuration for an existing topic in the cluster {{ cluster_id }}"
          afterResponse: "logResponse"
      - think: 1

      - delete:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/oldTopicName"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 202
          log: "Deleting an old topic from the cluster {{ cluster_id }}"
          afterResponse: "logResponse"
      - think: 1

# Replace logResponse with your own processing function if necessary
# processors:
#   logResponse: "./processors/logResponse.js"
