# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=4ee5afee1b

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    - path: "partitions_get_others.csv"
      skipHeader: true
      fields: ["cluster_id", "topic_name"]
  environments:
    - name: "staging"
      variables:
        AUTH_TOKEN: "{{ $processEnvironment.AUTH_TOKEN }}"
  plugins:
    expect: {}

scenarios:
  - name: "Non-Success API Responses Scenario"
    flow:
      - log: "Testing with invalid authentication token"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}/partitions"
          headers:
            Authorization: "Bearer invalid_token"
          expect:
            - statusCode: 401
            - hasProperty: "error_code"
            - hasProperty: "message"
            - property: "error_code"
              matcher: "equal"
              value: 40101
      - think: 1
      - log: "Testing with unauthorized access to the resource"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 403
            - hasProperty: "error_code"
            - hasProperty: "message"
            - property: "error_code"
              matcher: "equal"
              value: 40301
      - think: 1
      - log: "Testing with non-existing cluster ID"
        get:
          url: "/kafka/v3/clusters/non_existing_cluster/topics/{{ topic_name }}/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "error_code"
            - hasProperty: "message"
            - property: "error_code"
              matcher: "equal"
              value: 404
      - think: 1
      - log: "Testing with non-existing topic name"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/non_existing_topic/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "error_code"
            - hasProperty: "message"
            - property: "error_code"
              matcher: "equal"
              value: 40403
      - think: 1
      - log: "Testing rate limiting by sending too many requests"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 429
      - think: 1
      - log: "Testing internal server error scenario"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}/partitions"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 500
            - hasProperty: "error_code"
            - hasProperty: "message"
            - property: "error_code"
              matcher: "equal"
              value: 500
