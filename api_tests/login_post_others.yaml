# Test generated by RoostGPT for test credential-artillery-test using AI Type Azure Open AI and AI Model roost-gpt4-32k


# RoostTestHash=e0cf5b2e0e

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
  - duration: 60
    arrivalRate: 5
  payload:
    path: "login_post_others.csv"
    fields:
    - "email"
    - "otp"
    - "client"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
- name: "Test Non-Success API responses"
  flow:
  - log: "1. Scenario: testing a payload with an invalid email format"
    post:
      url: "/login"
      headers:
        Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
      json:
        email: "{{ email }}"
        otp: "{{ otp }}"
        client: "{{ client }}"
      expect:
        - statusCode: 400   # Expect a 400 status code due to invalid email format
        - hasProperty: "error"
        - hasProperty: "description"

  - think: 2

  - log: "2. Scenario: testing a payload with an incorrect OTP"
    post:
      url: "/login"
      headers:
        Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
      json:
        email: "{{ email }}"
        otp: "999999"
        client: "{{ client }}"
      expect:
        - statusCode: 400   # Expect a 400 status code due to incorrect OTP
        - hasProperty: "error"
        - hasProperty: "description"

  - think: 2

  - log: "3. Scenario: testing a payload with incorrect authorization credentials"
    post:
      url: "/login"
      headers:
        Authorization: "InvalidToken"
      json:
        email: "{{ email }}"
        otp: "{{ otp }}"
        client: "{{ client }}"
      expect:
        - statusCode: 401   # Expect a 401 status code due to invalid authorization
        - hasProperty: "error"
        - hasProperty: "description"
      
  - think: 2

  - log: "4. Scenario: testing an incorrect URL"
    post:
      url: "/loginIncorrect"
      headers:
        Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
      json:
        email: "{{ email }}"
        otp: "{{ otp }}"
        client: "{{ client }}"
      expect:
        - statusCode: 404   # Expect a 404 status code due an incorrect endpoint
