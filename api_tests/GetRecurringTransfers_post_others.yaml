# Test generated by RoostGPT for test qlue-single-api-test using AI Type Open AI and AI Model gpt-4


# Test generated for /GetRecurringTransfers_post for http method type POST in artillery framework

# RoostTestHash=7e03af5a84


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  environments:
    development:
      target: "{{ $processEnvironment.API_HOST }}"
      http:
        timeout: 10
  payload:
    path: "GetRecurringTransfers_post_others.csv"
    fields:
      - "customerId"
      - "status"
    skipHeader: true

scenarios:
  - name: "Non-Success API Responses Test"
    flow:
      # Invalid Authorization Token
      - post:
          url: "/GetRecurringTransfers"
          headers:
            koreUserId: "invalid"
            botId: "invalid"
            userCode: "invalid"
            accountId: "invalid"
            Authorization: "invalid"
          json:
            customerId: "{{ customerId }}"
            status: "{{ status }}"
          expect:
            - statusCode: 401
            - hasHeader: "www-authenticate"
          think: 1

      # Missing Required Headers
      - post:
          url: "/GetRecurringTransfers"
          headers:
            koreUserId: "valid"
            botId: ""
            userCode: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            status: "{{ status }}"
          expect:
            - statusCode: 400
          think: 1

      # Invalid URL
      - post:
          url: "/InvalidURL"
          headers:
            koreUserId: "valid"
            botId: "valid"
            userCode: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "{{ customerId }}"
            status: "{{ status }}"
          expect:
            - statusCode: 404
          think: 1

      # Invalid Payload
      - post:
          url: "/GetRecurringTransfers"
          headers:
            koreUserId: "valid"
            botId: "valid"
            userCode: "valid"
            accountId: "valid"
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            customerId: "invalid"
            status: "invalid"
          expect:
            - statusCode: 400
          think: 1
