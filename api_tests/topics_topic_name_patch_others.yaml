# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=9d07b67b96

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "topics_topic_name_patch_others.csv"
    fields:
      - "cluster_id"
      - "topic_name"
      - "partitions_count"
    skipHeader: true
  environments:
    dev:
      API_HOST: "https://api.dev.example.com"
      AUTH_TOKEN: "devtoken"
  plugins:
    expect: {}

scenarios:
  - name: "Update Partition Count with various failure scenarios"
    flow:
      - comment: "Expecting a 400 Bad Request due to invalid partitions_count"
        post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending invalid partitions_count to trigger a 400 Bad Request"
        think: 2
        expect:
          - statusCode: 400
          - hasProperty: "error_code"
          - hasProperty: "message"

      - comment: "Expecting a 401 Unauthorized due to invalid Authorization token"
        post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "InvalidToken"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending invalid Authorization token to trigger a 401 Unauthorized"
        think: 2
        expect:
          - statusCode: 401
          - hasProperty: "error_code"
          - hasProperty: "message"

      - comment: "Expecting a 403 Forbidden due to lack of permissions"
        post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending a request without proper permissions to trigger a 403 Forbidden"
        think: 2
        expect:
          - statusCode: 403
          - hasProperty: "error_code"
          - hasProperty: "message"

      - comment: "Expecting a 429 Too Many Requests due to rate limiting"
        post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending too many requests to trigger a 429 Too Many Requests"
        think: 2
        expect:
          - statusCode: 429
          - hasProperty: "message"

      - comment: "Expecting a 500 Internal Server Error due to server issues"
        post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending a request to trigger a 500 Internal Server Error"
        think: 2
        expect:
          - statusCode: 500
          - hasProperty: "error_code"
          - hasProperty: "message"

      - comment: "Expecting a 400 Bad Request due to invalid URL"
        post:
          url: "/kafka/v3/clusters/INVALID_CLUSTER_ID/topics/INVALID_TOPIC_NAME"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
            content-type: "application/json"
          json:
            partitions_count: "{{ partitions_count }}"
          log: "Sending a request to an invalid URL to trigger a 400 Bad Request"
        expect:
          - statusCode: 400
          - hasProperty: "error_code"
          - hasProperty: "message"
