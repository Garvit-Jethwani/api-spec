# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=9d07b67b96

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "topics_topic_name_patch_others.csv"
    fields:
      - "cluster_id"
      - "topic_name"
      - "partitions_count"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Non-Success API Response Tests"
    flow:
      - log: "Testing with invalid JSON payload"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer invalid_token"
          json:
            partitions_count: "invalid" # Invalid data type for partitions_count
          expect:
            - statusCode: 400
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - matchesJsonPath: "$.error_code"
            - matchesJsonPath: "$.message"

      - think: 2

      - log: "Testing with invalid authentication"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}invalid" # Invalid auth token
          json:
            partitions_count: 5
          expect:
            - statusCode: 401
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - matchesJsonPath: "$.error_code"
            - matchesJsonPath: "$.message"

      - think: 2

      - log: "Testing with insufficient authorization"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer insufficient_permissions_token" # Insufficient permissions token
          json:
            partitions_count: 5
          expect:
            - statusCode: 403
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - matchesJsonPath: "$.error_code"
            - matchesJsonPath: "$.message"

      - think: 2

      - log: "Testing with rate limiting error"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            partitions_count: 5
          expect:
            - statusCode: 429

      - think: 2

      - log: "Testing with server-side error"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            partitions_count: 5
          expect:
            - statusCode: 500
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - matchesJsonPath: "$.error_code"
            - matchesJsonPath: "$.message"

      - think: 2

      - log: "Testing with an invalid URL"
        patch:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/invalid_topic_name" # Invalid URL
          headers:
            content-type: "application/json"
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            partitions_count: 5
          expect:
            - statusCode: 404
