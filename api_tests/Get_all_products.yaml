# Test generated by RoostGPT for test credwallet-integration-artillery-updated using AI Type Open AI and AI Model gpt-4


config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  payload:
    path: "Get_all_products.csv"
    fields:
      - "productId"
    skipHeader: true
  environments:
    dev:
      variables:
        AUTH_TOKEN: "{{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Get all products"
    flow:
      - get:
          url: "/products"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
          think: 1
      - log: "Get all products request sent successfully"

  - name: "Add a new product to the store"
    flow:
      - post:
          url: "/products"
          json:
            id: "{{ productId }}"
            name: "Test Product"
            description: "This is a test product"
            price: 100
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
          think: 1
      - log: "Add a new product request sent successfully"

  - name: "Find product by ID"
    flow:
      - get:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
          think: 1
      - log: "Find product by ID request sent successfully"

  - name: "Updates a product in the store with form data"
    flow:
      - put:
          url: "/products/{{ productId }}"
          json:
            id: "{{ productId }}"
            name: "Updated Test Product"
            description: "This is an updated test product"
            price: 200
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
            - hasProperty: "id"
            - hasProperty: "name"
            - hasProperty: "description"
            - hasProperty: "price"
          think: 1
      - log: "Update product request sent successfully"

  - name: "Deletes a product"
    flow:
      - delete:
          url: "/products/{{ productId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 200
          think: 1
      - log: "Delete product request sent successfully"
