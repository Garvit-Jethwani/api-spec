# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=5a89adf6e3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    path: "topics_get_others.csv"
    fields:
      - "cluster_id"
      - "invalid_payload"
    skipHeader: true
  environments:
    staging:
      target: "https://staging.example.com"
  plugins:
    expect: {}

scenarios:
  - name: "Failure scenarios for List Topics"
    flow:
      - log: "Attempting to list topics with invalid cluster_id"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer invalid_token"
          expect:
            - statusCode: 401
            - contentType: 'application/json'
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - equals: { error_code: 40101 }
            - match: { path: '$.message', pattern: 'Authentication failed' }
        # Invalid cluster_id should result in a 401 Unauthorized response with an error message.

      - think: 1

      - log: "Attempting to list topics with missing Authorization header"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers: {}
          expect:
            - statusCode: 401
            - contentType: 'application/json'
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - equals: { error_code: 40101 }
            - match: { path: '$.message', pattern: 'Authentication failed' }
        # Missing Authorization should result in a 401 Unauthorized response with an error message.

      - think: 1

      - log: "Attempting to list topics with invalid payload"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            invalid_payload: "{{ invalid_payload }}"
          expect:
            - statusCode: 400
            - contentType: 'application/json'
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - equals: { error_code: 400 }
            - match: { path: '$.message', pattern: 'Cannot deserialize' }
        # Invalid payload should result in a 400 Bad Request response with a descriptive error message.

      - think: 1

      - log: "Attempting to list topics with an incorrect URL"
        get:
          url: "/kafka/v3/wrongpath/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
        # Incorrect URL should result in a 404 Not Found response.

      - think: 1

      - log: "Attempting to list topics with rate limiting"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 429
        # Exceeding rate limits should result in a 429 Too Many Requests response.

      - think: 1

      - log: "Attempting to list topics with server-side error"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 500
            - contentType: 'application/json'
            - hasProperty: 'error_code'
            - hasProperty: 'message'
            - equals: { error_code: 50003 }
            - match: { path: '$.message', pattern: 'Internal Server Error' }
        # Server-side errors should result in a 500 Internal Server Error response with an error code and message.
