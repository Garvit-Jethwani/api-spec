# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=5a89adf6e3

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "topics_get_others.csv"
    fields:
      - "cluster_id"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "List Topics - Error Handling Scenario"
    flow:
      - log: "Testing with invalid authorization token"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Invalid {{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 401
            - hasProperty: 'error_code'
            - hasProperty: 'message'
      - think: 1

      - log: "Testing with missing authorization header"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          expect:
            - statusCode: 401
            - hasProperty: 'error_code'
            - hasProperty: 'message'
      - think: 1

      - log: "Testing with invalid cluster_id"
      - get:
          url: "/kafka/v3/clusters/invalid_cluster_id/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 403
            - hasProperty: 'error_code'
            - hasProperty: 'message'
      - think: 1

      - log: "Testing with an invalid URL"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/invalid_endpoint"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
      - think: 1

      - log: "Testing rate limiting by sending too many requests"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 429
            - hasProperty: 'message'
      - think: 1

      - log: "Testing for server-side error"
      - get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 500
            - hasProperty: 'error_code'
            - hasProperty: 'message'
      - think: 1
