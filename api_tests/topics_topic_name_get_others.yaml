# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=4186ba69da

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "topics_topic_name_get_others.csv"
    fields:
      - "cluster_id"
      - "topic_name"
      - "include_authorized_operations"
  plugins:
    expect: {}
scenarios:
  - name: "GET /kafka/v3/clusters/{cluster_id}/topics/{topic_name} test scenario"
    flow:
      - log: "Test for invalid URL"
        get:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          headers:
            Authorization: "Invalid Auth Token"
          expect:
            - statusCode: 404
            - hasProperty: "id"
            - hasProperty: "status"
            - hasProperty: "code"
            - hasProperty: "title"
            - hasProperty: "detail"
            - hasProperty: "source"
            - hasProperty: "error_code"
            - hasProperty: "message"
      - think: 1
      - log: "Test for Unauthorized Access"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "Invalid Auth Token"
          expect:
            - statusCode: 401
            - hasProperty: "id"
            - hasProperty: "status"
            - hasProperty: "code"
            - hasProperty: "title"
            - hasProperty: "detail"
            - hasProperty: "source"
            - hasProperty: "error_code"
            - hasProperty: "message"
      - think: 1
      - log: "Test for Forbidden Access"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            include_authorized_operations: false
          expect:
            - statusCode: 403
            - hasProperty: "id"
            - hasProperty: "status"
            - hasProperty: "code"
            - hasProperty: "title"
            - hasProperty: "detail"
            - hasProperty: "source"
            - hasProperty: "error_code"
            - hasProperty: "message"
      - think: 1
      - log: "Test for Rate limit reached"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            include_authorized_operations: true
          expect:
            - statusCode: 429
      - think: 1
      - log: "Test for Server Errors"
        get:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics/{{ topic_name }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          qs:
            include_authorized_operations: true
          expect:
            - statusCode: 500
            - hasProperty: "id"
            - hasProperty: "status"
            - hasProperty: "code"
            - hasProperty: "title"
            - hasProperty: "detail"
            - hasProperty: "source"
            - hasProperty: "error_code"
            - hasProperty: "message"
