# Test generated by RoostGPT for test credential-artillery-test using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=6dd436357d

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  plugins:
    expect: {}
  payload:
    path: "me_patch_others.csv"
    fields:
      - "name"
      - "image"
      - "settings"
    skipHeader: true
  defaults:
    headers:
      Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"

scenarios:
  - name: "Non-Success API Responses Testing"
    flow:
      - log: "Attempting to patch with an invalid name (empty string)"
        post:
          url: "/me"
          json:
            name: ""
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
      - think: 1

      - log: "Attempting to patch with an invalid image format"
        post:
          url: "/me"
          json:
            image: "not_base64_format"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
      - think: 1

      - log: "Attempting to patch with invalid authentication token"
        post:
          url: "/me"
          json:
            name: "NewName"
          headers:
            Content-Type: "application/json"
            Authorization: "Bearer invalid_token"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - hasProperty: "description"
      - think: 1

      - log: "Attempting to patch with an incorrect URL"
        post:
          url: "/invalid_url"
          json:
            name: "NewName"
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 404 # Assuming 404 is the response for invalid URLs
      - think: 1

      - log: "Attempting to patch with missing required fields"
        post:
          url: "/me"
          json: {}
          headers:
            Content-Type: "application/json"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
