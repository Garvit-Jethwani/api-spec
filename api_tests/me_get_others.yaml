# Test generated by RoostGPT for test credential-artillery-test using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=ae6b8ce5ab

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "me_get_others.csv"
    fields:
      - "username"
      - "password"
    skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "API Failure Scenarios"
    flow:
      - log: "Testing with invalid authentication token"
      - post:
          url: "/me"
          headers:
            Authorization: "Bearer invalid_token"
          expect:
            - statusCode: 401
            - hasProperty: "error"
            - hasProperty: "description"
          comment: "Expecting 401 Authentication Required with error and description in the response body"

      - think: 1

      - log: "Testing with missing required fields in the payload"
      - post:
          url: "/me"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "{{ username }}"
            # Missing password field
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
            - hasProperty: "schema_field"
            - hasProperty: "value"
          comment: "Expecting 400 Bad Request due to missing required fields"

      - think: 1

      - log: "Testing with invalid URL"
      - post:
          url: "/invalid-url"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "{{ username }}"
            password: "{{ password }}"
          expect:
            - statusCode: 404
          comment: "Expecting 404 Not Found because the URL does not exist"

      - think: 1

      - log: "Testing with invalid payload data format"
      - post:
          url: "/me"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: 12345 # Invalid data type for username
            password: "{{ password }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
            - hasProperty: "schema_field"
            - hasProperty: "value"
          comment: "Expecting 400 Bad Request due to invalid data format for username"

      - think: 1

      - log: "Testing with invalid payload data pattern"
      - post:
          url: "/me"
          headers:
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            username: "invalid-email-format" # Invalid pattern for email
            password: "{{ password }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
            - hasProperty: "description"
            - hasProperty: "schema_field"
            - hasProperty: "value"
          comment: "Expecting 400 Bad Request due to invalid pattern for email in username field"
