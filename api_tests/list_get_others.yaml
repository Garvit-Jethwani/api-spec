# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4

# RoostTestHash=c1f7bc6396

config:
  target: "{{ $processEnvironment.API_HOST }}"
  plugins:
    expect: {}
  phases:
    - duration: 60
      arrivalRate: 20
  payload:
    path: "list_get_others.csv"
    fields:
      - "houseId"
    skipHeader: true

scenarios:
  - name: "Test failure and edge cases for /device/list API endpoint"
    flow:
      - log: "Send GET request to /device/list endpoint without required query parameters"
        get:
          url: "/device/list"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
        # The server should respond with a 400 status code and an error message because the required query parameters are missing.
        
      - think: 1

      - log: "Send GET request to /device/list endpoint with an invalid houseId"
        get:
          url: "/device/list?houseId=invalid"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 400
            - hasProperty: "error"
        # The server should respond with a 400 status code and an error message because the houseId is invalid.

      - think: 1

      - log: "Send GET request to /device/list endpoint with an invalid authorization token"
        get:
          url: "/device/list?houseId={{ houseId }}"
          headers:
            Authorization: "invalid"
          expect:
            - statusCode: 401
            - hasProperty: "error"
        # The server should respond with a 401 status code and an error message because the authorization token is invalid.

      - think: 1

      - log: "Send GET request to an invalid URL"
        get:
          url: "/invalid/url?houseId={{ houseId }}"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          expect:
            - statusCode: 404
            - hasProperty: "error"
        # The server should respond with a 404 status code and an error message because the URL is invalid.
