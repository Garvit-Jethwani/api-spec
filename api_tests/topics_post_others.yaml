# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=783e9d2ab5

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 5
  payload:
    - path: "topics_post_others.csv"
      fields:
        - "topic_name"
        - "partitions_count"
        - "replication_factor"
        - "configs"
      skipHeader: true
  plugins:
    expect: {}

scenarios:
  - name: "Non-Success API Responses"
    flow:
      - log: "Attempting to create a topic with an invalid payload"
        post:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          headers: 
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
            validate_only: true
          expect:
            - statusCode: 400
            - hasProperty: "error_code"
            - hasProperty: "message"
        # Invalid payload should result in a 400 Bad Request with an error_code and message in the response body.

      - think: 1

      - log: "Creating a topic without authorization header"
        post:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          json:
            topic_name: "unauthorized_topic"
            partitions_count: 1
            replication_factor: 1
            configs: []
          expect:
            - statusCode: 401
            - hasProperty: "error_code"
            - hasProperty: "message"
        # Missing authorization should result in a 401 Unauthorized with an error_code and message in the response body.

      - think: 1

      - log: "Creating a topic with invalid authorization token"
        post:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          headers: 
            Authorization: "Bearer invalid_token"
          json:
            topic_name: "invalid_auth_topic"
            partitions_count: 1
            replication_factor: 1
            configs: []
          expect:
            - statusCode: 403
            - hasProperty: "error_code"
            - hasProperty: "message"
        # Invalid authorization token should result in a 403 Forbidden with an error_code and message in the response body.

      - think: 1

      - log: "Creating a topic with a rate limit exceeded"
        post:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          headers: 
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "rate_limit_exceeded"
            partitions_count: 1
            replication_factor: 1
            configs: []
          expect:
            - statusCode: 429
        # Exceeding rate limit should result in a 429 Too Many Requests.

      - think: 1

      - log: "Creating a topic with a non-existent cluster ID"
        post:
          url: "/kafka/v3/clusters/non_existent_cluster/topics"
          headers: 
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "non_existent_cluster"
            partitions_count: 1
            replication_factor: 1
            configs: []
          expect:
            - statusCode: 404
        # Non-existent cluster ID should result in a 404 Not Found.

      - think: 1

      - log: "Creating a topic triggering a server error"
        post:
          url: "/kafka/v3/clusters/{cluster_id}/topics"
          headers: 
            Authorization: "Bearer {{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "internal_server_error"
            partitions_count: 1
            replication_factor: 1
            configs: []
          expect:
            - statusCode: 500
            - hasProperty: "error_code"
            - hasProperty: "message"
        # Triggering a server error should result in a 500 Internal Server Error with an error_code and message in the response body.
