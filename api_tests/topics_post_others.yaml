# Test generated by RoostGPT for test qlue-artillery using AI Type Open AI and AI Model gpt-4-1106-preview


# RoostTestHash=783e9d2ab5

config:
  target: "{{ $processEnvironment.API_HOST }}"
  phases:
    - duration: 60
      arrivalRate: 1
  payload:
    path: "topics_post_others.csv"
    fields:
      - "topic_name"
      - "partitions_count"
      - "replication_factor"
      - "configs"
    skipHeader: true
  environments:
    development:
      target: "http://dev.api.target"
    staging:
      target: "http://staging.api.target"
    production:
      target: "https://api.target"
  plugins:
    expect: {}

scenarios:
  - name: "Create Topic - Failure & Edge Cases"
    flow:
      - post:
          url: "/kafka/v3/clusters/invalid_cluster_id/topics"
          headers:
            Authorization: "Bearer INVALID_TOKEN"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
          log: "Testing with invalid cluster ID and invalid token"
          expect:
            - statusCode: 401

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: ""
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
          log: "Testing with empty topic name"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: -1
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
          log: "Testing with negative partitions count"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: 1000
            configs: "{{ configs }}"
          log: "Testing with replication factor larger than number of brokers"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "Bearer INVALID_TOKEN"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
          log: "Testing with invalid authorization token"
          expect:
            - statusCode: 401
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: "{{ configs }}"
            validate_only: true
          log: "Testing with dry-run mode and valid data"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs: []
          log: "Testing with empty configs array"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "topic-X"
            partitions_count: 64
            replication_factor: 3
            configs:
              - name: "cleanup.policy"
                value: null
          log: "Testing with null config value"
          expect:
            - statusCode: 400
            - hasProperty: "message"

      - think: 5

      - post:
          url: "/kafka/v3/clusters/{{ cluster_id }}/topics"
          headers:
            Authorization: "{{ $processEnvironment.AUTH_TOKEN }}"
          json:
            topic_name: "{{ topic_name }}"
            partitions_count: "{{ partitions_count }}"
            replication_factor: "{{ replication_factor }}"
            configs:
              - name: ""
                value: "gzip"
          log: "Testing with empty config name"
          expect:
            - statusCode: 400
            - hasProperty: "message"
